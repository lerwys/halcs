/*
 * Copyright (C) 2014 LNLS (www.lnls.br)
 * Author: Lucas Russo <lucas.russo@lnls.br>
 *
 * Released according to the GNU GPL, version 3 or any later version.
 */

/* Error definitions and output stringification based on the work available
 * at the libsllp project repository: https://github.com/brunoseivam/libsllp */

#ifndef _HALCS_CLIENT_ERR_H_
#define _HALCS_CLIENT_ERR_H_

#ifdef __cplusplus
extern "C" {
#endif

#define __HALCS_CLIENT_ERR_MODULE_INIT 153202234

#define __HALCS_CLIENT_ERR_MODULE_ERR1  (__HALCS_CLIENT_ERR_MODULE_INIT + 1)
#define __HALCS_CLIENT_ERR_MODULE_ERR2  (__HALCS_CLIENT_ERR_MODULE_INIT + 2)
#define __HALCS_CLIENT_ERR_MODULE_ERR3  (__HALCS_CLIENT_ERR_MODULE_INIT + 3)
#define __HALCS_CLIENT_ERR_MODULE_ERR4  (__HALCS_CLIENT_ERR_MODULE_INIT + 4)
#define __HALCS_CLIENT_ERR_MODULE_ERR5  (__HALCS_CLIENT_ERR_MODULE_INIT + 5)
#define __HALCS_CLIENT_ERR_MODULE_ERR6  (__HALCS_CLIENT_ERR_MODULE_INIT + 6)
#define __HALCS_CLIENT_ERR_MODULE_ERR7  (__HALCS_CLIENT_ERR_MODULE_INIT + 7)
#define __HALCS_CLIENT_ERR_MODULE_ERR8  (__HALCS_CLIENT_ERR_MODULE_INIT + 8)
#define __HALCS_CLIENT_ERR_MODULE_ERR9  (__HALCS_CLIENT_ERR_MODULE_INIT + 9)
#define __HALCS_CLIENT_ERR_MODULE_ERR10 (__HALCS_CLIENT_ERR_MODULE_INIT + 10)
#define __HALCS_CLIENT_ERR_MODULE_ERR11 (__HALCS_CLIENT_ERR_MODULE_INIT + 11)
#define __HALCS_CLIENT_ERR_MODULE_ERR12 (__HALCS_CLIENT_ERR_MODULE_INIT + 12)
#define __HALCS_CLIENT_ERR_MODULE_ERR13 (__HALCS_CLIENT_ERR_MODULE_INIT + 13)
#define __HALCS_CLIENT_ERR_MODULE_ERR14 (__HALCS_CLIENT_ERR_MODULE_INIT + 14)
#define __HALCS_CLIENT_ERR_MODULE_ERR15 (__HALCS_CLIENT_ERR_MODULE_INIT + 15)
#define __HALCS_CLIENT_ERR_MODULE_ERR16 (__HALCS_CLIENT_ERR_MODULE_INIT + 16)
#define __HALCS_CLIENT_ERR_MODULE_ERR17 (__HALCS_CLIENT_ERR_MODULE_INIT + 17)
#define __HALCS_CLIENT_ERR_MODULE_ERR18 (__HALCS_CLIENT_ERR_MODULE_INIT + 18)
#define __HALCS_CLIENT_ERR_MODULE_ERR19 (__HALCS_CLIENT_ERR_MODULE_INIT + 19)
#define __HALCS_CLIENT_ERR_MODULE_ERR20 (__HALCS_CLIENT_ERR_MODULE_INIT + 20)

#define __HALCS_CLIENT_ERR_END (__HALCS_CLIENT_ERR_MODULE_ERR20 + 1)

enum _halcs_client_err_e
{
    HALCS_CLIENT_SUCCESS = 0,               /* No error */
    HALCS_CLIENT_ERR_ALLOC = 1,             /* Could not allocate memory */
    HALCS_CLIENT_ERR_SERVER = 2,            /* Server could not complete request */
    HALCS_CLIENT_ERR_AGAIN = 3,             /* Operation did not fully complete, try again */
    HALCS_CLIENT_ERR_TIMEOUT = 4,           /* Timeout occurred */
    HALCS_CLIENT_ERR_MSG = 5,               /* Unexpected message */
    HALCS_CLIENT_INT = 6,                   /* Interrupt occured */
    HALCS_CLIENT_ERR_INV_PARAM = 7,         /* Invalid function parameters */
    HALCS_CLIENT_ERR_INV_FUNCTION = 8,      /* Invalid function */
    HALCS_CLIENT_ERR_INV_RETCODE = 9,       /* Invalid return code */
    HALCS_CLIENT_ERR_GEN_END = 10,          /* End of generic enum marker */
    HALCS_CLIENT_ERR_MODULE = __HALCS_CLIENT_ERR_MODULE_INIT,  /* Init of module enum marker */
    HALCS_CLIENT_ERR_MODULE_ERR1  = __HALCS_CLIENT_ERR_MODULE_ERR1,
    HALCS_CLIENT_ERR_MODULE_ERR2  = __HALCS_CLIENT_ERR_MODULE_ERR2,
    HALCS_CLIENT_ERR_MODULE_ERR3  = __HALCS_CLIENT_ERR_MODULE_ERR3,
    HALCS_CLIENT_ERR_MODULE_ERR4  = __HALCS_CLIENT_ERR_MODULE_ERR4,
    HALCS_CLIENT_ERR_MODULE_ERR5  = __HALCS_CLIENT_ERR_MODULE_ERR5,
    HALCS_CLIENT_ERR_MODULE_ERR6  = __HALCS_CLIENT_ERR_MODULE_ERR6,
    HALCS_CLIENT_ERR_MODULE_ERR7  = __HALCS_CLIENT_ERR_MODULE_ERR7,
    HALCS_CLIENT_ERR_MODULE_ERR8  = __HALCS_CLIENT_ERR_MODULE_ERR8,
    HALCS_CLIENT_ERR_MODULE_ERR9  = __HALCS_CLIENT_ERR_MODULE_ERR9,
    HALCS_CLIENT_ERR_MODULE_ERR10 = __HALCS_CLIENT_ERR_MODULE_ERR10,
    HALCS_CLIENT_ERR_MODULE_ERR11 = __HALCS_CLIENT_ERR_MODULE_ERR11,
    HALCS_CLIENT_ERR_MODULE_ERR12 = __HALCS_CLIENT_ERR_MODULE_ERR12,
    HALCS_CLIENT_ERR_MODULE_ERR13 = __HALCS_CLIENT_ERR_MODULE_ERR13,
    HALCS_CLIENT_ERR_MODULE_ERR14 = __HALCS_CLIENT_ERR_MODULE_ERR14,
    HALCS_CLIENT_ERR_MODULE_ERR15 = __HALCS_CLIENT_ERR_MODULE_ERR15,
    HALCS_CLIENT_ERR_MODULE_ERR16 = __HALCS_CLIENT_ERR_MODULE_ERR16,
    HALCS_CLIENT_ERR_MODULE_ERR17 = __HALCS_CLIENT_ERR_MODULE_ERR17,
    HALCS_CLIENT_ERR_MODULE_ERR18 = __HALCS_CLIENT_ERR_MODULE_ERR18,
    HALCS_CLIENT_ERR_MODULE_ERR19 = __HALCS_CLIENT_ERR_MODULE_ERR19,
    HALCS_CLIENT_ERR_MODULE_ERR20 = __HALCS_CLIENT_ERR_MODULE_ERR20,
    HALCS_CLIENT_ERR_END = __HALCS_CLIENT_ERR_END  /* End of enum marker */
};

typedef enum _halcs_client_err_e halcs_client_err_e;

/* Convert enumeration type to string */
const char * halcs_client_err_str (halcs_client_err_e err);

#ifdef __cplusplus
}
#endif

#endif
